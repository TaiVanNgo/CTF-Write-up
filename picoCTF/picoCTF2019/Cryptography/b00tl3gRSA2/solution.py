from Crypto.Util.number import long_to_bytes

# I noitice the description that d is the small number, so i tried to use the brute force attack.


c = 172245907427478841744615607763406278238029079821422885568396979601522402529269259204780683755526570929799021222437822259399580726322338968948415858246115201157761952435054641492856051518089700934682510601136129868940789718549237205665529321094825115339156374853056721693472800840599405959928208510360488574574
n = 175163021735857235396881709170094813100996428443185554579886945498807102077302210270423126876263645444850839326412162842835464599811495392887877305261788230144391638979827532068593099873406398898129939149881150371478684509652329720826665464473476929900893763303216580297060763175790535271098753494134550780081
e = 118474316256242178821697293473652940786546053124205961180137153564026769821331081292354638525476274648426128062344506802788770302513757973061643610637338994831104565290588494013037036948046720495467829000410094001434820922017937290637004517095789356348893823188377687138866309456305881056696796357122714085165


for d in range(1, 10**8):
    m = pow(c, d, n)
    plain_text_bytes = long_to_bytes(m)

    try:
        plain_text = plain_text_bytes.decode('utf-8')
        if 'picoCTF' in plain_text:
            print('Private Key: ', d)
            print('Message: ', plain_text)
            break
    except:
        continue
